--запрос №1
SELECT Н_ОЦЕНКИ.ПРИМЕЧАНИЕ, Н_ВЕДОМОСТИ.ЧЛВК_ИД
FROM Н_ОЦЕНКИ 
	RIGHT JOIN Н_ВЕДОМОСТИ
	ON Н_ОЦЕНКИ.ПРИМЕЧАНИЕ = 'хорошо' AND Н_ВЕДОМОСТИ.ДАТА < '1998-01-05';
	
--запрос №2 
SELECT Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ЧЛВК_ИД 
FROM Н_ЛЮДИ
	LEFT JOIN Н_ВЕДОМОСТИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
	LEFT JOIN Н_СЕССИЯ ON Н_СЕССИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД 
WHERE Н_ЛЮДИ.ОТЧЕСТВО = 'Александрович' AND Н_ВЕДОМОСТИ.ДАТА = '2022-06-08' AND Н_СЕССИЯ.ДАТА < '2012-01-25';

--Составить запрос, который ответит на вопрос, есть ли среди студентов вечерней формы обучения те, кто старше 25 лет.
--запрос №3 	
SELECT EXISTS(SELECT Н_УЧЕНИКИ.ИД FROM Н_УЧЕНИКИ 
	INNER JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
	INNER JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
	WHERE date_part('year', age(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) > 25 AND Н_ПЛАНЫ.ФО_ИД = 2);

--Выдать различные отчества людей и число людей с каждой из этих отчеств, ограничив список отчествами, встречающимися менее 10 раз на ФКТИУ.
--Для реализации использовать подзапрос.
--запрос №4 
SELECT Н_ОТЧЕСТВА.ОТЧЕСТВО, Н_ОТЧЕСТВА.КОЛИЧЕСТВО FROM
	(SELECT Н_ЛЮДИ.ОТЧЕСТВО, count(*) AS КОЛИЧЕСТВО FROM Н_ЛЮДИ
		INNER JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
		INNER JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
		INNER JOIN Н_ОТДЕЛЫ ON Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД AND Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ' 
		GROUP BY Н_ЛЮДИ.ОТЧЕСТВО) 
	AS Н_ОТЧЕСТВА 
WHERE Н_ОТЧЕСТВА.КОЛИЧЕСТВО < 10;

--Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя оценка меньше максимальной оценк(е|и) в группе 1101.
--запрос №5 
SELECT Н_УЧЕНИКИ.ИД, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО, AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS NUMERIC)) AS СРЕДНЯЯ_ОЦЕНКА
	FROM Н_ЛЮДИ 
		INNER JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД 
		INNER JOIN Н_ВЕДОМОСТИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД 
	WHERE Н_УЧЕНИКИ.ГРУППА = '4100' AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT IN ('зачет', 'осв', 'неявка', 'незач')
	GROUP BY Н_УЧЕНИКИ.ИД, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО
	HAVING AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS NUMERIC)) < (SELECT MAX(СРЕДНЯЯ_ОЦЕНКА)
	    FROM (
		  SELECT AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS NUMERIC)) AS СРЕДНЯЯ_ОЦЕНКА
		  FROM Н_ВЕДОМОСТИ
		  INNER JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
		  WHERE Н_УЧЕНИКИ.ГРУППА = '1101' AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT IN ('зачет', 'осв', 'неявка', 'незач')
		  GROUP BY Н_ВЕДОМОСТИ.ЧЛВК_ИД
	    ) AS Н_ГРУППА_1101
	);

--Получить список студентов, отчисленных ровно первого сентября 2012 года с очной или заочной формы обучения (специальность: Программная инженерия). В результат включить:
--номер группы;
--номер, фамилию, имя и отчество студента;
--номер пункта приказа;
--Для реализации использовать соединение таблиц.
--запрос №6
SELECT Н_УЧЕНИКИ.ГРУППА, Н_УЧЕНИКИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО FROM Н_УЧЕНИКИ
	INNER JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД 
	INNER JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД 
	INNER JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ ON Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД = Н_ПЛАНЫ.НАПС_ИД 
	INNER JOIN Н_НАПР_СПЕЦ ON Н_НАПР_СПЕЦ.ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НАПС_ИД AND Н_НАПР_СПЕЦ.ИД = 741 
	INNER JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ФОРМЫ_ОБУЧЕНИЯ.ИД = Н_ПЛАНЫ.ФО_ИД AND (Н_ФОРМЫ_ОБУЧЕНИЯ.ИД = 1 OR Н_ФОРМЫ_ОБУЧЕНИЯ.ИД = 2)
	WHERE Н_УЧЕНИКИ.ПРИЗНАК = 'отчисл' AND Н_УЧЕНИКИ.КОНЕЦ = '2012-09-01';
 
--Вывести список людей, не являющихся или не являвшихся студентами ФКТИУ (данные, о которых отсутствуют в таблице Н_УЧЕНИКИ). В запросе нельзя использовать DISTINCT.
--запрос №7 
SELECT Н_ЛЮДИ.ИД, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО FROM Н_ЛЮДИ 
	WHERE NOT EXISTS(SELECT * FROM Н_УЧЕНИКИ 
		INNER JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
		INNER JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД AND Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
			WHERE Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД);



